css3动画animation-timing-function中的cubic-bezier(n,n,n,n)  

    预留的几个特效：
    ease: cubic-bezier(0.25, 0.1, 0.25, 1.0)
    linear: cubic-bezier(0.0, 0.0, 1.0, 1.0)
    ease-in: cubic-bezier(0.42, 0, 1.0, 1.0)
    ease-out: cubic-bezier(0, 0, 0.58, 1.0)
    ease-in-out: cubic-bezier(0.42, 0, 0.58, 1.0)

html {font-size: 62.5%;/*10 ÷ 16 × 100% = 62.5%*/}
body {font-size: 1.4rem;/*1.4 × 10px = 14px */}
h1 { font-size: 2.4rem;/*2.4 × 10px = 24px*/}


http://zhitu.isux.us/  图片优化



http://nqdeng.github.io/7-days-nodejs/#1.1  nodejs讲解

http://zywhunter.blog.163.com/blog/static/64659941201402262514727/?COLLCC=2343345554&  多任务

http://cyzus.github.io/2015/06/21/github-build-blog/  github 博客搭建

http://www.ruanyifeng.com/blog/2015/03/react.html   react.js学习
http://reactjs.cn/react/docs/getting-started.html

http://tympanus.net/codrops/category/tutorials/   交互学习

http://fontawesome.dashgame.com/	fontawesome矢量图标


http://www.runoob.com/nodejs/nodejs-event.html   node学习和了解
http://www.runoob.com/nodejs/nodejs-util.html


http://pan.baidu.com/s/1dDmV6sp		node.js开发指南

https://iiunknown.gitbooks.io/iscroll-5-api-cn/content/		iscroll5 api

http://stylechen.com/wp-content/uploads/demo/monoevent/test/index.html  

http://www.jb51.net/article/50663.htm   touch事件封装

http://www.html5canvastutorials.com/    html5 canvas 

http://www.gbtags.com/gb/gbliblist/111.htm		HTML5类库CreateJS系列：PreloadJS, SoundJS, 和TweenJS

http://segmentfault.com/q/1010000002452755	伪元素的js控制样式


http://caniuse.mojijs.com/Home/Html	浏览器兼容性


http://www.html5canvastutorials.com/kineticjs/  kinetic手册

http://isux.tencent.com/great-mobile-h5-pages.html   常见的h5效果

http://swiper2.swiper.com.cn/api/basic/2014/1215/19.html

http://www.swiper.com.cn/api/callbacks/2014/1217/84.html  swiper手册

http://2015hydro.imagchina.com/wap/	案例还h5


http://203.195.235.76/jssdk/#menu-share  微信分享实例

PreloadJS的基础使用
PreloadJS是一个用来管理和协调相关资源加载的类库，它可以方便的帮助你预先加载相关资源


http://daneden.github.io/animate.css/		动画效果演示

http://apps.eky.hk/css-triangle-generator/zh-hant	css3三角形生成器


http://www.cnblogs.com/Wayou/p/requestAnimationFrame.html  requestAnimationFrame讲解

http://caniuse.com/ 				css属性浏览器支持查询



http://www.damndigital.com/archives/102923 

http://www.cnblogs.com/tim-li/archive/2012/08/06/2580252.html#9 html5 canve画布学习

http://blog.fens.me/nodejs-grunt-intro/  

http://caibaojian.com/grunt.html	

http://javascript.ruanyifeng.com/tool/grunt.html#toc0 	node 插件学习

http://ourjs.com/detail/529ca5950cb6498814000005  

http://blog.csdn.net/yanghua_kobe/article/details/17199417#t0   nodejs学习


http://www.ituring.com.cn/article/13472  angular学习

http://www.imooc.com/learn/141    bootstarp学习

http://www.bootcdn.cn/      稳定、快速、免费的开源项目 CDN 服务

http://segmentfault.com/a/1190000000749890   游戏开发

http://javascript.ruanyifeng.com/		综合学习

http://beiyuu.com/css3-animation/		css3动画详解

http://www.cnblogs.com/samwu/p/3655196.html   flex布局

http://fff.cmiscm.com/	3d博客学习


http://www.shejidaren.com/html5-animate-page.html	html5动画讲解



http://www.w3cplus.com/css3/animation-principles-for-the-web.html   cubic-bezier讲解


http://codepen.io/collection/AxKOdY/3/		动画原则实例演示

<#if item.buyStatue?? && item.buyStatue == 1>checked="checked"</#if>

http://www.zztuku.com/Html/DIV+CSS/20130614_10894.html 圆角气泡提示框

http://www.swiper.com.cn/api/		swiper中文网


http://yuanzhifei89.iteye.com/blog/974082	eclipse 编辑器的设置

http://git-scm.com/book/zh/v1/%E8%B5%B7%E6%AD%A5-%E8%8E%B7%E5%8F%96%E5%B8%AE%E5%8A%A9  git学习



http://www.html-js.com/article/Fine-blind-ponder		再说闭包  疑问？


http://www.tuicool.com/articles/Inyueyi			Web移动端Fixed布局的解决方案


http://segmentfault.com/		javascript问答类网站


https://github.com/acidb/mobiscroll		日期插件


http://leaverou.github.io/animatable/#font-size 	css3效果


http://www.17sucai.com/pins/9561.html    html5截图上传图片


http://www.w3cplus.com/css3/flexboxgeng-jia-you-ya-de-webbu-ju.html   css3伸缩布局


http://www.gruntjs.net/getting-started   构建工具学习grunt





-------------------------------------------------------------------------------------------------

js语法技巧集合

1.串行执行

我们可以编写一个流程控制函数，让它来控制异步任务，一个任务完成以后，再执行另一个。这就叫串行执行。

var items = [ 1, 2, 3, 4, 5, 6 ];
var results = [];
function series(item) {
  if(item) {
    async( item, function(result) {
      results.push(result);
      return series(items.shift());
    });
  } else {
    return final(results);
  }
}
series(items.shift());